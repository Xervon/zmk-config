// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#define B_NUM(key) B_LAYER(num, key)

/ {
    keymap {
        num {
            bindings = <
        // ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮   ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮
        // │              |  7           |  8           |  9           |  -           │   │              │              │              │              │              │
             &none          &kp KP_N7      &kp KP_N8      &kp KP_N9      &kp KP_MINUS       &none          &none          &none          &none          &none
        // ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤   ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
        // │  /           |  4           |  5           |  6           |  *           │   │              │  SHIFT       │  CONTROL     |  ALT         |  GUI         │
             &kp KP_DIVIDE  &kp KP_N4      &kp KP_N5      &kp KP_N6      &kp KP_MULTIPLY    &none          MT_SK(RSHFT)   MT_SK(RCTRL)   MT_SK(RALT)    MT_SK(RGUI)
        // ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤   ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
        // │  .,          |  1           |  2           |  3           |  +           │   │              │              │              │              │              │
             B_NUM(dot)     &kp KP_N1      &kp KP_N2      &kp KP_N3      &kp KP_PLUS        &none          &none          &none          &none          &none
        // ╰──────────────┴──────────────┴──────────────┼──────────────┼──────────────┤   ├──────────────┼──────────────┼──────────────┴──────────────┴──────────────╯
        //                                              |  0           |  =           |   |              |              |
                                                          &kp KP_N0      &kp KP_EQUAL       &trans         &none
        //                                              ╰──────────────┴──────────────╯   ╰──────────────┴──────────────╯
            >;
        };
    };

    behaviors {
        layers {
            num {
                dot {
                    compatible = "zmk,behavior-mod-morph";
                    label = "num_DOT";
                    #binding-cells = <0>;
                    bindings = <&kp KP_DOT>, <&kp KP_COMMA>;
                    mods = <(MOD_LSFT|MOD_RSFT)>;
                };
            };
        };
    };
};
